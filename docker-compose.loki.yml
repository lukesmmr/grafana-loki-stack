services:
  # Prometheus server to scrape metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - internal

  # Node Exporter to collect host metrics
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - internal

  # Commented out due to error: Failed to create a Container Manager: mountpoint for cpu not found
  # cadvisor:
  #   image: google/cadvisor:latest
  #   container_name: cadvisor
  #   ports:
  #     - "8080:8080"  # cAdvisor's web UI (optional) on port 8080
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   restart: unless-stopped
  #   networks:
  #     - internal

  loki:
    image: grafana/loki:2.8.2
    command: -config.file=/etc/loki/config/loki-config.yml
    volumes:
      - ./loki-config.yml:/etc/loki/config/loki-config.yml:ro
      - loki_data:/loki
    restart: unless-stopped
    networks:
      - internal

  promtail:
    image: grafana/promtail:2.8.2
    command: -config.file=/etc/promtail/config/promtail-config.yml
    volumes:
      - ./promtail-config.yml:/etc/promtail/config/promtail-config.yml:ro
      - /var/log/caddy:/var/log/caddy:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - promtail_positions:/tmp
    depends_on:
      - loki
    restart: unless-stopped
    networks:
      - internal

  grafana:
    image: grafana/grafana:9.5.5
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki
    restart: unless-stopped
    networks:
      - internal

  grafana_reverse_proxy:
    image: caddy:2
    ports:
      - "8443:443"  # Access subdomain set in Caddyfile with port 8443 (using internal TLS)
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - DOMAIN=${DOMAIN}
      - EMAIL=${EMAIL}
    depends_on:
      - grafana
    restart: unless-stopped
    networks:
      - internal

volumes:
  loki_data:
  grafana_data:
  promtail_positions:
  caddy_data:
  caddy_config:

networks:
  internal:
    driver: bridge
