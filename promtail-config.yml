server:
  http_listen_port: 9080
  log_level: info

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    tenant_id: "default"

scrape_configs:
  # Scrape Caddy's specific log files from the shared Docker volume
  - job_name: caddy_files
    static_configs:
      - targets:
          - localhost
        labels:
          job: caddy_files
          __path__: /var/log/caddy/*.log
    pipeline_stages:
      - json:
          expressions:
            ts: ts
            msg: msg
            request: request
            status: status
      - labels:
          log_type:
            # Dynamically set log type based on filename
            expression: '`/var/log/caddy/access.log` in __filename__ ? "access" : "operations"'

  # Scrape Docker containers with specific handling for Caddy
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s

    # Pipeline stages to parse Docker log fields
    pipeline_stages:
      - docker: {}
      - match:
          selector: '{container=~".*grafana_reverse_proxy.*"}'
          stages:
            - json:
                expressions:
                  level: level
                  msg: msg
                  ts: ts
            - labels:
                level:
                service: caddy
                type: docker_logs

    relabel_configs:
      # Set job label based on container name
      - source_labels: ['__meta_docker_container_name']
        regex: '.*grafana_reverse_proxy.*'
        target_label: 'job'
        replacement: 'caddy'
      
      # For non-Caddy containers, set default job as docker
      - source_labels: ['__meta_docker_container_name']
        regex: '.*'
        target_label: 'job'
        replacement: 'docker'
      
      # Override job=docker with job=caddy for Caddy containers
      - source_labels: ['__meta_docker_container_name']
        regex: '.*grafana_reverse_proxy.*'
        target_label: 'job'
        replacement: 'caddy'
      
      # Add container name as a label
      - source_labels: ['__meta_docker_container_name']
        target_label: 'container'
        
      # Add container image as a label
      - source_labels: ['__meta_docker_container_image']
        target_label: 'image'
